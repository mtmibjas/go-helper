package helper

import (
	"errors"
	"time"
)

func ParseTimestamp(timestamp string) (time.Time, error) {
	layouts := []string{
		"2006-01-02T15:04:05.000Z",
		"2006-01-02T15:04:05Z",
		"2006-01-02",
		"2006-01-02T15:04:05.000-07:00",
		"2006-01-02 15:04:05",
		"2006-01-02 15:04:05.000",
		"02 Jan 2006 15:04",
		"02 Jan 2006",
		"January 2, 2006",
		"Jan 2, 2006",
		"02-Jan-2006",
		"02/01/2006",
		"2006/01/02",
		"02/01/06",
		"2 Jan 2006",
		"2 January 2006",
		"Mon, 02 Jan 2006 15:04:05 MST",
		"Mon, 02 Jan 2006 15:04:05 -0700",
		"Mon, 2 Jan 2006 15:04:05 MST",
		"Mon, 2 Jan 2006 15:04:05 -0700",
		"02-01-2006 15:04:05",
		"2-1-2006 15:04:05",
		"2006-01-02 3:04PM",
		"2 Jan 2006 15:04",
		"2-Jan-2006 15:04:05",
		"2-Jan-06 15:04:05",
		"2006-01-02 15:04:05 -0700",
		"Mon, 2 Jan 2006 15:04:05 +0000",
		"2006-01-02T15:04:05Z07:00",
		"2006-01-02T15:04:05-07:00",
		"2006-01-02T15:04:05-0700",
		"2006-01-02T15:04:05.999999999-07:00",
		"02 Jan 06 15:04 MST",
		"02 Jan 2006 15:04 -0700",
		"02 Jan 2006 15:04:05 -0700",
		"2 Jan 2006 15:04:05 -0700",
		"2-Jan-06 15:04:05 -0700",
		"02-01-2006",
		"2006.01.02",
		"2006.01.02 AD at 15:04:05 -0700",
		"Mon Jan 2 15:04:05 2006",
		"Mon Jan 2 15:04:05 MST 2006",
		"Mon Jan 02 15:04:05 -0700 2006",
		"Mon Jan 2 15:04:05 -0700 2006",
		"02 Jan 06 15:04 -0700",
		"02 January 2006",
		"Monday, 02-Jan-06 15:04:05 UTC",
		"Mon, 02 Jan 2006 15:04:05 UTC",
		"Mon, 2 Jan 2006 15:04:05 UTC",
		"Mon, 02 Jan 06 15:04:05 UTC",
		"Mon, 2 Jan 06 15:04:05 UTC",
		"Mon, 02 Jan 06 15:04:05 +0000",
		"Mon, 2 Jan 06 15:04:05 +0000",
		"Monday, 02-Jan-06 15:04:05 +0000",
		"Monday, 2-Jan-06 15:04:05 +0000",
		"Mon, 02 Jan 06 15:04 UTC",
		"Mon, 2 Jan 06 15:04 UTC",
		"02 Jan 06 15:04 -0700",
		"2 Jan 06 15:04 -0700",
		"02-Jan-06 15:04",
		"2-Jan-06 15:04",
		"Mon, 2 Jan 2006 15:04:05 +0000",
		"Mon, 02-Jan-06 15:04:05 UTC",
		"Mon, 2-Jan-06 15:04:05 UTC",
		"Mon, 2-Jan-06 15:04 UTC",
		"Mon, 02-Jan-06 15:04 UTC",
		"Mon, 2 Jan 06 15:04:05 UTC",
		"Monday, 02-Jan-06 15:04:05 UTC",
		"Mon, 02 Jan 2006 15:04:05 GMT",
		"Mon, 2 Jan 2006 15:04:05 GMT",
		"Mon, 2 Jan 06 15:04:05 GMT",
		"Mon, 02 Jan 06 15:04:05 GMT",
		"02 Jan 06 15:04 -0700",
		"2 Jan 06 15:04 -0700",
		"Mon, 2 Jan 2006 15:04:05 GMT",
		"Mon, 02 Jan 2006 15:04:05 GMT",
		"Monday, 02-Jan-06 15:04:05 GMT",
		"Monday, 2-Jan-06 15:04:05 GMT",
		"Mon, 2-Jan-06 15:04:05 GMT",
		"Mon, 02-Jan-06 15:04:05 GMT",
		"Mon, 02 Jan 06 15:04:05 GMT",
		"Mon, 2 Jan 06 15:04:05 GMT",
		"02 Jan 06 15:04 -0700",
		"2 Jan 06 15:04 -0700",
		"Mon, 02 Jan 06 15:04 GMT",
		"Mon, 2 Jan 06 15:04 GMT",
		"02 Jan 06 15:04 -0700",
		"2 Jan 06 15:04 -0700",
		"02-01-2006 15:04",
		"2-1-2006 15:04",
		"2006-01-02 15:04",
		"2 Jan 2006 15:04",
		"2-Jan-2006 15:04",
		"2-Jan-06 15:04",
		"2006-01-02 15:04 -0700",
		"Mon, 2 Jan 2006 15:04 +0000",
	}

	for _, layout := range layouts {
		if parsedTime, err := time.Parse(layout, timestamp); err == nil {
			return parsedTime, nil
		}
	}

	return time.Time{}, errors.New("invalid timestamp format")
}
